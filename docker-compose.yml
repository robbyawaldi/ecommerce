version: '3'

services:
  db:
    image: postgres
    restart: always
    environment: 
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    volumes: 
      - pgdata:/var/lib/postgresql/data
    networks: 
      - shopping_app

  redis:
    image: redis
    restart: always
    networks: 
      - shopping_app
       
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    restart: always
    volumes: 
      - ./server/public/images:/usr/src/app/public/images
    environment: 
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_NAME=${DATABASE_NAME}
      - REDIS_URL=${REDIS_URL}
      - PORT=${PORT}
      - SESSION_SECRET=${SESSION_SECRET}
      - DOMAIN=${DOMAIN}
      - APP_URL=${APP_URL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    depends_on:
      - db
      - redis
    networks: 
      - shopping_app
  
  web:
    image: robbyawaldi/ecommerce_web:1.0.5
    restart: always
    environment: 
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    depends_on:
      - server
    networks: 
      - shopping_app

  nginx:
    image: nginx:stable-alpine
    restart: always
    volumes:
      - ./nginx:/etc/nginx/templates
      - ./nginx/ssl:/etc/nginx/ssl
    environment: 
      - NGINX_HOST=${DOMAIN}
    depends_on:
      - server
      - web
      - db
      - redis
    ports: 
      - 80:80
      - 443:443
    networks: 
      - shopping_app

networks: 
  shopping_app:
    driver: bridge

volumes: 
  pgdata: